# https://packaging.python.org/en/latest/guides/writing-pyproject-toml/
[build-system]
requires = ["maturin>=1.0,<2.0"]
build-backend = "maturin"

[project]
name = "foundation"
version = "0.0.1"
description = "Foundation directory with basic setup"
authors = ["Michael J. Wilson"]
readme = {file = "README.md", content-type = "text/markdown"}
license = {file = "LICENSE"}
requires-python = ">=3.9.18"
dependencies = [
    "numpy",
    "furo"="^2024.1.29",
    "sphinx"="7.1.2",
    "sphinx-rtd-theme"="1.3.0rc1",
]

[project.optional-dependencies]
test = ["pytest"]

[tool.maturin]
python-source = "python"
module-name = "foundation.core"

[tool.pytest.ini_options]
minversion = "6.0"
addopts = ["-ra -q", "--showlocals", "--strict-markers", "--strict-config"]
xfail_strict = true
filterwarnings = ["error"]
testpaths = [
    "tests",
    "integration",
]

[tool.mypy]
files = "src"
python_version = "3.8"
warn_unused_configs = true
strict = true
show_error_codes = true
enable_error_code = ["ignore-without-code", "redundant-expr", "truthy-bool"]
warn_unreachable = true

[tool.ruff.lint]
extend-select = [
  "B",           # flake8-bugbear
  "I",           # isort
  "ARG",         # flake8-unused-arguments
  "C4",          # flake8-comprehensions
  "EM",          # flake8-errmsg
  "ICN",         # flake8-import-conventions
  "ISC",         # flake8-implicit-str-concat
  "G",           # flake8-logging-format
  "PGH",         # pygrep-hooks
  "PIE",         # flake8-pie
  "PL",          # pylint
  "PT",          # flake8-pytest-style
  "PTH",         # flake8-use-pathlib
  "RET",         # flake8-return
  "RUF",         # Ruff-specific
  "SIM",         # flake8-simplify
  "T20",         # flake8-print
  "UP",          # pyupgrade
  "YTT",         # flake8-2020
  "EXE",         # flake8-executable
  "NPY",         # NumPy specific rules
  "PD",          # pandas-vet
]
extend-ignore = [
  "PLR09",    # Too many <...>
  "ISC001",   # Conflicts with formatter
]
unfixable = [
  "T20",  # Removes print statements
  "F841", # Removes unused variables
]
isort.required-imports = ["from __future__ import annotations"]

[tool.ruff.lint.per-file-ignores]
"tests/**" = ["T20"]
